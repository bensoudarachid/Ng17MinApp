@use '@angular/material' as mat;
@import '@src/styles.scss'; // Keep existing import

// Define primary color consistently with the private component
$primary: mat.define-palette(mat.$indigo-palette); 

@include mat.core();

.card {
  // Inherit base card styles if needed, or add specific ones
  // Example: Add a transition if desired, though removed from private one
  // transition: transform 0.2s ease-in-out;
  // &:hover {
  //   transform: translateY(-4px);
  // }

  // Styles for the image header area
  .card-img-top {
    background-color: mat.get-color-from-palette($primary, 500);
    // No padding to place image in corner
    height: 110px; // Fixed height for the header area
    display: flex; // Use flexbox for alignment
    align-items: flex-start; // Align content (app-image) to the top
  }

  .card-body {
    background-color: white; // Assuming white body like private one
  }

  .card-footer {
    // Style footer as needed for public view - keeping original accent for now
    // If it should match private, change to: mat.get-color-from-palette($primary, 500)
    background-color: $accent; 
    // Add color: white; if needed for contrast with footer background
  }

  .card-text {
    font-size: 1em;
    text-align: justify; // Keep existing style
  }

  // Styles for the app-image component wrapper
  .appimage {
    display: block; 
    overflow: hidden; 
    // Set a fixed size for the image container, positioned by parent flexbox
    width: 110px; 
    height: 110px; 

    // Styles for the actual img element inside app-image
    ::ng-deep img {
      display: block; 
      width: 100%;  // Fill the container width
      height: 100%; // Fill the container height
      object-fit: contain; // Fit image within container, maintain aspect ratio
      margin: 0; // Ensure no extra margin
    }
  }
  
  // Removed old img selector as ::ng-deep handles the specific image
}
